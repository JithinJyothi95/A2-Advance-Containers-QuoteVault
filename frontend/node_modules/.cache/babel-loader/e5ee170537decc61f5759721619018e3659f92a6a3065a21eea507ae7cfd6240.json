{"ast":null,"code":"import{useEffect,useState}from'react';import'./App.css';// Use environment variable or fallback to localhost (for local dev)\n//const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE=process.env.REACT_APP_API_URL||'/api/quotes';function App(){const[quotes,setQuotes]=useState([]);const[quote,setQuote]=useState('');useEffect(()=>{fetch(API_BASE).then(res=>res.json()).then(setQuotes).catch(err=>console.error('Error fetching quotes:',err));},[]);const submitQuote=e=>{e.preventDefault();fetch(API_BASE,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({quote})}).then(()=>{setQuote('');return fetch(API_BASE).then(res=>res.json());}).then(setQuotes).catch(err=>console.error('Error adding quote:',err));};const deleteQuote=id=>{fetch(\"\".concat(API_BASE,\"/\").concat(id),{method:'DELETE'}).then(()=>fetch(API_BASE).then(res=>res.json())).then(setQuotes).catch(err=>console.error('Error deleting quote:',err));};// useEffect(() => {\n//   fetch(`${API_BASE}/api/quotes`)\n//     .then(res => res.json())\n//     .then(setQuotes)\n//     .catch(err => console.error('Error fetching quotes:', err));\n// }, []);\n// const submitQuote = (e) => {\n//   e.preventDefault();\n//   fetch(`${API_BASE}/api/quotes`, {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify({ quote })\n//   })\n//   .then(() => {\n//     setQuote('');\n//     return fetch(`${API_BASE}/api/quotes`).then(res => res.json());\n//   })\n//   .then(setQuotes)\n//   .catch(err => console.error('Error adding quote:', err));\n// };\n// const deleteQuote = (id) => {\n//   fetch(`${API_BASE}/api/quotes/${id}`, { method: 'DELETE' })\n//     .then(() => fetch(`${API_BASE}/api/quotes`).then(res => res.json()))\n//     .then(setQuotes)\n//     .catch(err => console.error('Error deleting quote:', err));\n// };\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"QuoteVault\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitQuote,children:[/*#__PURE__*/_jsx(\"input\",{value:quote,onChange:e=>setQuote(e.target.value),placeholder:\"Your quote\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Quote\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:quotes.map(q=>/*#__PURE__*/_jsxs(\"li\",{children:[q.quote,/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteQuote(q.id),children:\"\\uD83D\\uDDD1\\uFE0F\"})]},q.id))})]});}export default App;","map":{"version":3,"names":["useEffect","useState","jsx","_jsx","jsxs","_jsxs","API_BASE","process","env","REACT_APP_API_URL","App","quotes","setQuotes","quote","setQuote","fetch","then","res","json","catch","err","console","error","submitQuote","e","preventDefault","method","headers","body","JSON","stringify","deleteQuote","id","concat","className","children","onSubmit","value","onChange","target","placeholder","type","map","q","onClick"],"sources":["/workspaces/A2-Advance-Containers-QuoteVault-/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\n// Use environment variable or fallback to localhost (for local dev)\n//const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst API_BASE = process.env.REACT_APP_API_URL || '/api/quotes';\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [quote, setQuote] = useState('');\n  useEffect(() => {\n    fetch(API_BASE)\n      .then(res => res.json())\n      .then(setQuotes)\n      .catch(err => console.error('Error fetching quotes:', err));\n  }, []);\n\n  const submitQuote = (e) => {\n    e.preventDefault();\n    fetch(API_BASE, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ quote })\n    })\n      .then(() => {\n        setQuote('');\n        return fetch(API_BASE).then(res => res.json());\n      })\n      .then(setQuotes)\n      .catch(err => console.error('Error adding quote:', err));\n  };\n\n  const deleteQuote = (id) => {\n    fetch(`${API_BASE}/${id}`, { method: 'DELETE' })\n      .then(() => fetch(API_BASE).then(res => res.json()))\n      .then(setQuotes)\n      .catch(err => console.error('Error deleting quote:', err));\n  };\n\n  // useEffect(() => {\n  //   fetch(`${API_BASE}/api/quotes`)\n  //     .then(res => res.json())\n  //     .then(setQuotes)\n  //     .catch(err => console.error('Error fetching quotes:', err));\n  // }, []);\n\n  // const submitQuote = (e) => {\n  //   e.preventDefault();\n  //   fetch(`${API_BASE}/api/quotes`, {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     body: JSON.stringify({ quote })\n  //   })\n  //   .then(() => {\n  //     setQuote('');\n  //     return fetch(`${API_BASE}/api/quotes`).then(res => res.json());\n  //   })\n  //   .then(setQuotes)\n  //   .catch(err => console.error('Error adding quote:', err));\n  // };\n\n  // const deleteQuote = (id) => {\n  //   fetch(`${API_BASE}/api/quotes/${id}`, { method: 'DELETE' })\n  //     .then(() => fetch(`${API_BASE}/api/quotes`).then(res => res.json()))\n  //     .then(setQuotes)\n  //     .catch(err => console.error('Error deleting quote:', err));\n  // };\n\n  return (\n    <div className=\"App\">\n      <h1>QuoteVault</h1>\n      <form onSubmit={submitQuote}>\n        <input \n          value={quote} \n          onChange={(e) => setQuote(e.target.value)} \n          placeholder=\"Your quote\" \n        />\n        <button type=\"submit\">Add Quote</button>\n      </form>\n      <ul>\n        {quotes.map(q => (\n          <li key={q.id}>\n            {q.quote}\n            <button onClick={() => deleteQuote(q.id)}>üóëÔ∏è</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}